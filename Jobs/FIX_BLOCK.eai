#IFDEF GLOBAL
  unit blockpathunit = null
  unit blockunit = null
  unit blockunittemp = null
  real blocklocx = 0
  real blocklocy = 0
#ELSE

// ######################## Fix Block ###############################
// Created by JZY 15/04/24.
// fix mode : 0 move ancient or kill build and with compensation , 1 harvest or attack tree , 2 give path unit move aside , 3 check periphery block unit
// ##################################################################
function TryAttackTree takes unit u, integer id, location l returns nothing
  if id == 'ebal' or id == 'hmtm' or id == 'ocat' or id == 'umtw' or id == 'ncat' then
    call RemoveGuardPosition(u)
    call IssuePointOrderLoc(u, "attackground", l)
    call CreateDebugTag("fix block : attack tree", 10, u, 3.00, 1.50)
    call TQAddUnitJob(6, RESET_GUARD_POSITION_ONLY, 0, u)
  elseif GetUnitAbilityLevel(u, 'AEfn') > 0 or GetUnitAbilityLevel(u, 'ACfr') > 0 then
    call CreateDebugTag("fix block : use skill to tree", 10, u, 3.00, 1.50)
    call IssuePointOrderLoc(u, "forceofnature", l)
  endif
endfunction

function MoveAncient takes unit u returns nothing
  local unit utemp = CreateUnitAtLoc(ai_player, GetUnitTypeId(u), front_loc[0], 270)
  local real x = GetUnitX(utemp)
  local real y = GetUnitY(utemp)
  call RemoveUnitAM(utemp)
  if GetUnitCurrentOrder(u) != OrderId("root") then
    call IssueImmediateOrder(u, "cancel")
    call IssueImmediateOrder(u, "unroot")
  endif
  call CreateDebugTagLoc("fix block : root here", 10, x, y, 3.00, 1.50)
  call IssuePointOrder(u, "root", x, y)  // build no n need RESET GUARD POSITION
  call TQAddUnitJob(10, RESET_ANCIENT, 0, u)
  set utemp = null
endfunction

function TeleportFixBlock takes unit u, player p returns nothing
  local group g = null
  local unit t = null
  local real x = GetLocationX(home_location)
  local real y = GetLocationY(home_location)
  if p != ai_player then
    set g = CreateGroup()
    call GroupEnumUnitsOfPlayer(g, p, null)
    loop
      set t = FirstOfGroup(g)
      exitwhen t == null or (IsUnitType(t, UNIT_TYPE_TOWNHALL) and UnitAlive(t) and not IsUnitHidden(t))
      call GroupRemoveUnit(g,t)
    endloop
    if t != null then
      set x = GetUnitX(t)
      set y = GetUnitY(t)
      set t = null
    endif
    call DestroyGroup(g)
    set g = null
  endif
  if GetSlotsFreeOnUnit(u) == 0 then
    call SetItemPosition(UnitItemInSlot(u, 0), x, y)  // Using custom items may result in significant losses
  endif
  call CreateDebugTag("fix block : hero TP", 10, u, 3.00, 1.50)
  call UnitUseItemPoint(u, UnitAddItemById(u, old_id[tp_item]), x, y)
endfunction

function TryFixBlock takes integer fixmode, location l, real range returns nothing
  local group g = CreateGroup()
  local group tg = CreateGroup()
  local unit u = null
  local unit utemp = null
  local unit utree = null
  local player p = null
  local integer i = 0
  local boolean array allyhero
  call GroupEnumUnitsInRangeOfLoc(g, l, range, null)
  call GroupRemoveUnit(g, expansion_peon)
  call GroupRemoveUnit(g, blockpathunit)
  if fixmode == 0 then
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null or utree != null
      set p = GetOwningPlayer(u)
      if p == ai_player then
        if IsUnitType(u, UNIT_TYPE_STRUCTURE) and not IsUnitGoldMine(u) and not IsUnitType(u, UNIT_TYPE_TOWNHALL) and UnitAlive(u) and not IsUnitHidden(u) then
          if utree == null and IsUnitType(u, UNIT_TYPE_ANCIENT) then
            call MoveAncient(u)
            set utree = u
          endif
          set i = GetUnitTypeId(u)  // Prevent kill mine , altar , lumber , but include shop
          if utemp == null and GetUnitCount(i) > 1 and i != old_id[racial_expansion] and i != old_id[racial_altar] and i != old_id[racial_lumber] then
            set utemp = u
          endif
        endif
      elseif IsUnitType(u, UNIT_TYPE_HERO) and UnitAlive(u) and IsPlayerAlly(ai_player, p) and not allyhero[GetPlayerId(p)] and GetPlayerController(p) == MAP_CONTROL_COMPUTER then
        call CreateDebugTagLoc("fix block : ally hero block", 10, GetUnitX(u), GetUnitY(u), 3.00, 1.50)
        call GroupAddUnit(tg,u)
        set allyhero[GetPlayerId(p)] = true  //  case one loop let hero teleport too much
      endif
      call GroupRemoveUnit(g,u)
    endloop
    if utree == null then
      if utemp == null then  // can not find structure so try TP
        set i = 1
        loop
          exitwhen i > 3
          set u = hero_unit[i]
          if u != null and UnitAlive(u) and not IsUnitLoaded(u) and not IsUnitBuying(u) and IsStandardUnit(u) and DistanceBetweenPoints_kd(home_location, GetUnitLoc(u)) < front_base_distance then
            call TeleportFixBlock(u, ai_player)
            set i = 3  // just need one
          endif
          set i = i + 1
        endloop
        loop
          set u = FirstOfGroup(tg)
          exitwhen u == null
          call TeleportFixBlock(u, GetOwningPlayer(u))
          call GroupRemoveUnit(tg,u)
        endloop
      else
        call CreateDebugTag("fix block : kill build", 10, utemp, 3.00, 1.50)
        set i = GetUnitTypeId(utemp)
        call SetPlayerGold(ai_player, GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_GOLD) + GetUnitGoldCost(i) * 2)  // Prevent training unit or research technology
        call SetPlayerWood(ai_player, GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_LUMBER) + GetUnitWoodCost(i) * 2)
        call KillUnit(utemp)
      endif
    endif
    set utree = null
    set utemp = null
  elseif fixmode == 1 then
    if race_no_wood_harvest or GetPlayerRace(ai_player) == RACE_NIGHTELF then
      loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        set p = GetOwningPlayer(u)
        if p == ai_player then
          if not IsUnitType(u, UNIT_TYPE_PEON) and not IsUnitType(u, UNIT_TYPE_STRUCTURE) and UnitAlive(u) and not IsUnitHidden(u) and not IsUnitBuying(u) and not IsUnitLoaded(u) then
            call TryAttackTree(u, GetUnitTypeId(u), l)
          endif
        elseif IsUnitType(u, UNIT_TYPE_HERO) and IsPlayerAlly(ai_player, p) and not allyhero[GetPlayerId(p)] and GetPlayerController(p) == MAP_CONTROL_COMPUTER then
          call CreateDebugTagLoc("fix block : ally hero block", 10, GetUnitX(u), GetUnitY(u), 3.00, 1.50)
          call TeleportFixBlock(u, p)  // ally no wait
          set allyhero[GetPlayerId(p)] = true  //  case one loop let hero teleport too much
        endif
        call GroupRemoveUnit(g,u)
      endloop
    else
      loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        set p = GetOwningPlayer(u)
        if p == ai_player then
          if i < 2 and IsUnitType(u, UNIT_TYPE_PEON) and UnitAlive(u) and not IsUnitHidden(u) and GetUnitCurrentOrder(u) == OrderId("harvest") and not IsUnitBuying(u) and not IsUnitLoaded(u) then
            call RemoveGuardPosition(u)
            call IssuePointOrderLoc(u, "move", l)  // hope harvest near tree
            call CreateDebugTag("fix block : harvest tree", 10, u, 3.00, 1.50)
            call TQAddUnitJob(4, RESET_GUARD_POSITION, 0, u)
            set i = i + 1
          endif
        elseif IsUnitType(u, UNIT_TYPE_HERO) and IsPlayerAlly(ai_player, p) and not allyhero[GetPlayerId(p)] and GetPlayerController(p) == MAP_CONTROL_COMPUTER then
          call CreateDebugTagLoc("fix block : ally hero block", 10, GetUnitX(u), GetUnitY(u), 3.00, 1.50)
          call TeleportFixBlock(u, p)  // ally no wait
          set allyhero[GetPlayerId(p)] = true  //  case one loop let hero teleport too much
        endif
        call GroupRemoveUnit(g,u)
      endloop
    endif
  elseif fixmode == 2 then
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      if not IsUnitType(u, UNIT_TYPE_PEON) and not IsUnitType(u, UNIT_TYPE_STRUCTURE) and not IsUnitType(u, UNIT_TYPE_FLYING) and GetUnitTypeId(u) != 'ngir' and UnitAlive(u) and not IsUnitHidden(u) and GetUnitCurrentOrder(u) != OrderId("cannibalize") and not IsUnitLoaded(u) then
        set p = GetOwningPlayer(u)
        if (p == ai_player and not IsUnitBuying(u)) or (IsPlayerAlly(ai_player, p) and GetPlayerController(p) == MAP_CONTROL_COMPUTER) then
          call CreateDebugTagLoc("fix block : move aside", 10, GetUnitX(u), GetUnitY(u), 3.00, 1.50)
          call IssuePointOrderLoc(u, "move", front_loc[0])
        endif
      endif
      call GroupRemoveUnit(g,u)
    endloop
  else
    call GroupEnumUnitsInRangeOfLoc(tg, home_location, 1200, null)
    loop
      set u = FirstOfGroup(g)
      exitwhen u == null
      call GroupRemoveUnit(tg,u)
      call GroupRemoveUnit(g,u)  // Search periphery
    endloop
    loop
      set u = FirstOfGroup(tg)
      exitwhen u == null or blockunittemp != null
      set p = GetOwningPlayer(u)
      if (p == ai_player or (IsPlayerAlly(ai_player, p) and GetPlayerController(p) == MAP_CONTROL_COMPUTER)) and UnitAlive(u) and not IsUnitHidden(u) and not IsUnitLoaded(u) and not IsUnitType(u, UNIT_TYPE_PEON) and not IsUnitType(u, UNIT_TYPE_STRUCTURE) and not IsUnitType(u, UNIT_TYPE_FLYING) then
        if blockunit == null then
          set blockunit = u
          set blocklocx = GetUnitX(u)
          set blocklocy = GetUnitY(u)
        else
          set blockunittemp = u
        endif
        call CreateDebugTag("fix block : block unit move aside", 10, u, 3.00, 1.50)
        call IssuePointOrderLoc(u, "move", front_loc[0])
      endif
      call GroupRemoveUnit(tg,u)
    endloop
  endif
  call DestroyGroup(tg)
  set tg = null
  call DestroyGroup(g)
  set g = null
  set u = null
  set p = null
endfunction

function RemoveBlockPathUnit takes nothing returns nothing
  if blockpathunit != null then
    call RemoveUnitAM(blockpathunit)
    set blockpathunit = null
  endif
endfunction

function FindTree takes real x, real y returns nothing
  call RemoveBlockPathUnit()
  call TryFixBlock(2, home_location, 1000)  //Move aside
  set blockpathunit = CreatePathingUnitFull(blockpathunit, ai_player, 'ewsp', x, y)
  call UnitApplyTimedLife(blockpathunit, 'BTLF', 18)
  call SetUnitMoveSpeed(blockpathunit, 300)  // unable use fastest speed
  call IssueImmediateOrder(blockpathunit, "autoharvestlumber")
endfunction

function FixBlockJob takes nothing returns nothing
  local location l = null
  local unit u = null
  local unit t = null
  local integer i = 1
  if TownThreatened() or town_threatened or towerrush or teleporting or not pathing_done or water_map or GetPlayerStructureCount(ai_player, true) < 8 then  // town_threatened include ally so not check
    call RemoveBlockPathUnit()
    set blockunit = null
    set blockunittemp = null
    call TQAddJob(360, FIX_BLOCK, 0)
    return
  endif
  if blockpathunit != null then
    if DistanceBetweenPoints_kd(home_location, GetUnitLoc(blockpathunit)) < 1400 then
      if GetUnitTypeId(blockpathunit) == 'ewsp' then
        set l = GetUnitLoc(blockpathunit)
        set i = GetUnitCurrentOrder(blockpathunit)
        call RemoveBlockPathUnit()
        if i == OrderId("harvest") then
          call TryFixBlock(1, l, 1200)
        else
          call TryFixBlock(0, l, 600)
        endif
        call TryFixBlock(3, home_location, 1000)
        call RemoveLocation(l)
        set l = null
      else
        call CreateDebugTag("fix block : unit block at here", 10, blockpathunit, 3.00, 1.50)
        call FindTree(GetUnitX(blockpathunit), GetUnitY(blockpathunit))
      endif
      set i = 2
    else  // no block
      set i = 360
      call RemoveBlockPathUnit()
      set blockunit = null
      set blockunittemp = null
    endif
    call TQAddJob(i, FIX_BLOCK, 0)
    return
  endif
  if blockunit != null then
    if GetOwningPlayer(blockunit) != ai_player then  //Prevent being occupied
      set i = 60
    elseif DistanceBetweenPoints_dd(Location(blocklocx, blocklocy), GetUnitLoc(blockunit)) < 600 then
      call CreateDebugTag("fix block : unit block at here", 10, blockunit, 3.00, 1.50)
      call FindTree(blocklocx, blocklocy)
      set i = 2
    else
      set i = 360
    endif
    set blockunittemp = null
    set blockunit = null
    call TQAddJob(i, FIX_BLOCK, 0)  // tree must close
    return
  elseif blockunittemp != null then
    if GetOwningPlayer(blockunittemp) != ai_player then  //Prevent being occupied
      set i = 60
    elseif DistanceBetweenPoints_kd(home_location, GetUnitLoc(blockunittemp)) < 600 then
      call CreateDebugTag("fix block : back unit block at here", 10, blockunittemp, 3.00, 1.50)
      call FindTree(GetUnitX(blockunittemp), GetUnitY(blockunittemp))
      set i = 2
    else
      set i = 360
    endif
    set blockunittemp = null
    call TQAddJob(i, FIX_BLOCK, 0)  // tree must close
    return
  endif
  call RemoveBlockPathUnit()
  set blockunit = null
  set blockunittemp = null
  call DisplayToAllJobDebug("Fix_Block Job Start, state")
  call TryFixBlock(2, home_location, 1000)
  if c_ally_total < 1 or ISign() < 0 then
    set l = GetPlayerStartLocationLoc(enemy_force[Max(0, GetRandomInt(0, c_enemy_total - 1))])
  else
    set l = GetPlayerStartLocationLoc(ally_force[Max(0, GetRandomInt(0, c_ally_total - 1))])
  endif
  if l == null or DistanceBetweenPoints(home_location, l) < 1600 then
    if l != null then
      call RemoveLocation(l)
      set l = null
    endif
    set i = GetRandomInt(0, NEUTRAL_COUNT - 1)
    if nearest_neutral[i] != null then
      set l = GetUnitLoc(nearest_neutral[i])
      if DistanceBetweenPoints(home_location, l) < 1600 then
        call RemoveLocation(l)
        set l = null
      endif
    endif
  endif
  if l != null then
    set blockpathunit = CreatePathingUnitFull(blockpathunit, Player(PLAYER_NEUTRAL_PASSIVE), 'hbew', GetLocationX(home_location), GetLocationY(home_location))  // must big unit and can not revive
    call UnitApplyTimedLife(blockpathunit, 'BTLF', 18)  // Prevent player defeat unit not remove or home too close then unit block pther palyer
    call IssuePointOrderLoc(blockpathunit, "move", l)
    call RemoveLocation(l)
    set l = null
  endif
  set t = nearest_neutral[NEUTRAL_TAVERN]
  if t != null and DistanceBetweenPoints_kd(home_location, GetUnitLoc(t)) < 1600 then
    loop
      exitwhen i > 3
      set u = hero_unit[i]
      if u != null and UnitAlive(u) and not IsUnitLoaded(u) and not IsUnitBuying(u) and IsStandardUnit(u) and DistanceBetweenUnits(u, t) < 1000 then
        call CreateDebugTagLoc("fix block : hero block", 10, GetUnitX(u), GetUnitY(u), 3.00, 1.50)
        call TeleportFixBlock(u, ai_player)
        set i = 3  // once check one
      endif
      set i = i + 1
    endloop
    set u = null
  endif
  set i = 0
  loop
    exitwhen i >= max_towns
    if own_town_loc[i] != null and own_town_dist[i] > 1300 then
      call TryFixBlock(1, own_town_loc[i], 600)
    endif
    set i = i + 1
  endloop
  set t = null
  call TQAddJob(5, FIX_BLOCK, 0)
endfunction
#ENDIF