#IFDEF GLOBAL
#ELSE
function ZeppelinFollowJob takes nothing returns nothing
  local real dist = 0
  //local location l = null
  local group g = null
  local group cg = null
  local unit u = null
  local location heroloc = null
  call DisplayToAllJobDebug("ZEPPELIN_FOLLOW Start")
  if follow_zeppelin == null or not UnitAlive(follow_zeppelin) or IsUnitBuying(follow_zeppelin) or IsUnitInGroup(follow_zeppelin, unit_rescueing) or IsUnitInGroup(follow_zeppelin, unit_zepplin_move) then
    set follow_zeppelin = null
    if major_hero != null and UnitAlive(major_hero) and GetUnitCountDone(old_id[neutral_zeppelin]) + GetUnitCountDone('uarb') > 0 then
      set g = CreateGroup()
      set cg = CreateGroup()
      call GroupEnumUnitsOfPlayer(g, ai_player, null)
      call GroupRemoveUnit(g, build_zeppelin)
      //set g = SelectByIdOr(g, old_id[neutral_zeppelin], 'uarb', true)
      //set g = SelectByOrderOr(g, 0, order_attack, true)
      //set g = SelectByAlive(g, true)
      //set g = SelectByHidden(g, false)
      //set g = SelectByUnitStandard(g, true)
      //set g = SelectByUnitFree(g, true)
      loop
        set u = FirstOfGroup(g)
        exitwhen u == null
        if (GetUnitTypeId(u) == old_id[neutral_zeppelin] or GetUnitTypeId(u) == 'uarb') and UnitAlive(u) and not IsUnitHidden(u) and IsStandardUnit(u) and not IsUnitBuying(u) then
          if GetUnitCurrentOrder(u) == 0 or GetUnitCurrentOrder(u) == OrderId("stop") then  // Prevent stuck in can not repair areas or other unknown situations
            call RecycleGuardPosition(u)
            call IssuePointOrder(u, "unloadall", GetUnitX(u) + ISign() * GetRandomReal(100,200), GetUnitY(u) + ISign() * GetRandomReal(100,200))
          endif
          call GroupAddUnit(cg, u)
        endif
        call GroupRemoveUnit(g, u)
      endloop
      set heroloc = GetUnitLoc(major_hero)
      set follow_zeppelin = GetNearestOfGroup(follow_zeppelin, cg, heroloc)
      call RemoveLocation(heroloc)
      set heroloc = null
      call DestroyGroup(cg)
      set cg = null
      call DestroyGroup(g)
      set g = null
    endif
  endif
  if follow_zeppelin == null then
    set follow_zeppelin = null
    call TQAddJob(10, ZEPPELIN_FOLLOW, 0)
    set zeppelin_following = false
    return
  endif
  if major_hero == null or not UnitAlive(major_hero) then
    call RecycleGuardPosition(follow_zeppelin) // Not being used by other zepplin control so recycle position
    set follow_zeppelin = null
    call TQAddJob(10, ZEPPELIN_FOLLOW, 0)
    set zeppelin_following = false
    return
  endif
  call RemoveGuardPosition(follow_zeppelin)
  set zeppelin_following = true
  set dist = DistanceBetweenUnits(major_hero, follow_zeppelin)
  if dist > max_follow_dist and not IsUnitLoaded(major_hero) then
    call CreateDebugTag("Zepplin follow hero", 10, follow_zeppelin, 3.00, 1.50)
    //set l = GetLocationBetweenUnits(follow_zeppelin, major_hero, (dist - 0.5 * max_follow_dist) / RMax(dist,1))
    //set l = GetLocationBetweenUnits(follow_zeppelin, major_hero, (dist - 0.33 * max_follow_dist))
    // if not IssuePointOrder(follow_zeppelin, "unloadall", GetLocationX(l), GetLocationY(l)) then
    //   call IssuePointOrder(follow_zeppelin, "unloadall", GetLocationX(l) + ISign() * GetRandomReal(100,200), GetLocationY(l) + ISign() * GetRandomReal(100,200))
    // endif
    call IssueTargetOrder(follow_zeppelin, "move", major_hero)
    call TQAddJob(RMax((dist - max_follow_dist) / RMax(GetUnitMoveSpeed(follow_zeppelin) + GetUnitMoveSpeed(major_hero), 50), 1) * sleep_multiplier,ZEPPELIN_FOLLOW,0)
    //call RemoveLocation(l)
    //set l = null
  else
    call CreateDebugTag("Zepplin follow stopped", 10, follow_zeppelin, 3.00, 1.50)
    call IssueImmediateOrder(follow_zeppelin, "stop")
    //if not IssuePointOrder(follow_zeppelin, "unloadall", GetUnitX(follow_zeppelin), GetUnitY(follow_zeppelin)) then
      call IssuePointOrder(follow_zeppelin, "unloadall", GetUnitX(follow_zeppelin) + ISign() * GetRandomReal(100,200), GetUnitY(follow_zeppelin) + ISign() * GetRandomReal(100,200))
    //endif
    call TQAddJob(10,ZEPPELIN_FOLLOW,0)
  endif
endfunction
#ENDIF